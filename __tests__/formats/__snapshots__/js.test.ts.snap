// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`javascript serializer serializes bigtest correctly 1`] = `
"import { Tag } from '@mcstatic/nbts'

const root = Tag.compound([
	Tag.long(9223372036854775807n, 'longTest'),
	Tag.short(32767, 'shortTest'),
	Tag.string('HELLO WORLD THIS IS A TEST STRING ÅÄÖ!', 'stringTest'),
	Tag.float(0.4982314705848694, 'floatTest'),
	Tag.int(2147483647, 'intTest'),
	Tag.compound([
		Tag.compound([
			Tag.string('Hampus', 'name'),
			Tag.float(0.75, 'value')
		], 'ham'),
		Tag.compound([
			Tag.string('Eggbert', 'name'),
			Tag.float(0.5, 'value')
		], 'egg')
	], 'nested compound test'),
	Tag.list([
		Tag.long(11n),
		Tag.long(12n),
		Tag.long(13n),
		Tag.long(14n),
		Tag.long(15n)
	], 'listTest (long)'),
	Tag.list([
		Tag.compound([
			Tag.string('Compound tag #0', 'name'),
			Tag.long(1264099775885n, 'created-on')
		]),
		Tag.compound([
			Tag.string('Compound tag #1', 'name'),
			Tag.long(1264099775885n, 'created-on')
		])
	], 'listTest (compound)'),
	Tag.byte(127, 'byteTest'),
	Tag.byteArray(Buffer.from([0,62,34,16,8,10,22,44,76,18,70,32,4,86,78,80,92,14,46,88,40,2,74,56,48,50,62,84,16,58,10,72,44,26,18,20,32,54,86,28,80,42,14,96,88,90,2,24,56,98,50,12,84,66,58,60,72,94,26,68,20,82,54,36,28,30,42,64,96,38,90,52,24,6,98,0,12,34,66,8,60,22,94,76,68,70,82,4,36,78,30,92,64,46,38,40,52,74,6,48,0,62,34,16,8,10,22,44,76,18,70,32,4,86,78,80,92,14,46,88,40,2,74,56,48,50,62,84,16,58,10,72,44,26,18,20,32,54,86,28,80,42,14,96,88,90,2,24,56,98,50,12,84,66,58,60,72,94,26,68,20,82,54,36,28,30,42,64,96,38,90,52,24,6,98,0,12,34,66,8,60,22,94,76,68,70,82,4,36,78,30,92,64,46,38,40,52,74,6,48,0,62,34,16,8,10,22,44,76,18,70,32,4,86,78,80,92,14,46,88,40,2,74,56,48,50,62,84,16,58,10,72,44,26,18,20,32,54,86,28,80,42,14,96,88,90,2,24,56,98,50,12,84,66,58,60,72,94,26,68,20,82,54,36,28,30,42,64,96,38,90,52,24,6,98,0,12,34,66,8,60,22,94,76,68,70,82,4,36,78,30,92,64,46,38,40,52,74,6,48,0,62,34,16,8,10,22,44,76,18,70,32,4,86,78,80,92,14,46,88,40,2,74,56,48,50,62,84,16,58,10,72,44,26,18,20,32,54,86,28,80,42,14,96,88,90,2,24,56,98,50,12,84,66,58,60,72,94,26,68,20,82,54,36,28,30,42,64,96,38,90,52,24,6,98,0,12,34,66,8,60,22,94,76,68,70,82,4,36,78,30,92,64,46,38,40,52,74,6,48,0,62,34,16,8,10,22,44,76,18,70,32,4,86,78,80,92,14,46,88,40,2,74,56,48,50,62,84,16,58,10,72,44,26,18,20,32,54,86,28,80,42,14,96,88,90,2,24,56,98,50,12,84,66,58,60,72,94,26,68,20,82,54,36,28,30,42,64,96,38,90,52,24,6,98,0,12,34,66,8,60,22,94,76,68,70,82,4,36,78,30,92,64,46,38,40,52,74,6,48,0,62,34,16,8,10,22,44,76,18,70,32,4,86,78,80,92,14,46,88,40,2,74,56,48,50,62,84,16,58,10,72,44,26,18,20,32,54,86,28,80,42,14,96,88,90,2,24,56,98,50,12,84,66,58,60,72,94,26,68,20,82,54,36,28,30,42,64,96,38,90,52,24,6,98,0,12,34,66,8,60,22,94,76,68,70,82,4,36,78,30,92,64,46,38,40,52,74,6,48,0,62,34,16,8,10,22,44,76,18,70,32,4,86,78,80,92,14,46,88,40,2,74,56,48,50,62,84,16,58,10,72,44,26,18,20,32,54,86,28,80,42,14,96,88,90,2,24,56,98,50,12,84,66,58,60,72,94,26,68,20,82,54,36,28,30,42,64,96,38,90,52,24,6,98,0,12,34,66,8,60,22,94,76,68,70,82,4,36,78,30,92,64,46,38,40,52,74,6,48,0,62,34,16,8,10,22,44,76,18,70,32,4,86,78,80,92,14,46,88,40,2,74,56,48,50,62,84,16,58,10,72,44,26,18,20,32,54,86,28,80,42,14,96,88,90,2,24,56,98,50,12,84,66,58,60,72,94,26,68,20,82,54,36,28,30,42,64,96,38,90,52,24,6,98,0,12,34,66,8,60,22,94,76,68,70,82,4,36,78,30,92,64,46,38,40,52,74,6,48,0,62,34,16,8,10,22,44,76,18,70,32,4,86,78,80,92,14,46,88,40,2,74,56,48,50,62,84,16,58,10,72,44,26,18,20,32,54,86,28,80,42,14,96,88,90,2,24,56,98,50,12,84,66,58,60,72,94,26,68,20,82,54,36,28,30,42,64,96,38,90,52,24,6,98,0,12,34,66,8,60,22,94,76,68,70,82,4,36,78,30,92,64,46,38,40,52,74,6,48,0,62,34,16,8,10,22,44,76,18,70,32,4,86,78,80,92,14,46,88,40,2,74,56,48,50,62,84,16,58,10,72,44,26,18,20,32,54,86,28,80,42,14,96,88,90,2,24,56,98,50,12,84,66,58,60,72,94,26,68,20,82,54,36,28,30,42,64,96,38,90,52,24,6,98,0,12,34,66,8,60,22,94,76,68,70,82,4,36,78,30,92,64,46,38,40,52,74,6,48]), 'byteArrayTest (the first 1000 values of (n*n*255+n*7)%100, starting with n=0 (0, 62, 34, 16, 8, ...))'),
	Tag.double(0.4931287132182315, 'doubleTest')
], 'Level')
"
`;

exports[`javascript serializer serializes hello world correctly 1`] = `
"import { Tag } from '@mcstatic/nbts'

const root = Tag.compound([
	Tag.string('Bananrama', 'name')
], 'hello world')
"
`;

exports[`javascript serializer serializes player-nan-value correvtly 1`] = `
"import { Tag } from '@mcstatic/nbts'

const root = Tag.compound([
	Tag.list([
		Tag.double(0),
		Tag.double(0),
		Tag.double(0)
	], 'Motion'),
	Tag.float(0, 'FallDistance'),
	Tag.list([
		Tag.double(0),
		Tag.double(0),
		Tag.double(0)
	], 'Pos'),
	Tag.short(20, 'Health'),
	Tag.short(0, 'DeathTime'),
	Tag.short(-20, 'Fire'),
	Tag.short(300, 'Air'),
	Tag.byte(1, 'OnGround'),
	Tag.short(0, 'HurtTime'),
	Tag.list([
		Tag.float(164.3999481201172),
		Tag.float(-63.150203704833984)
	], 'Rotation'),
	Tag.short(0, 'AttackTime'),
	Tag.list([

	], 'Inventory')
], '')
"
`;
